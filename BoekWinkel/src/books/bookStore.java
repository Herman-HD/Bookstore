/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package books;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Herman
 */
public class bookStore extends javax.swing.JFrame {

    /**
     * Creates new form bookStore
     */
    public bookStore() throws SQLException {
        initComponents();
        loadBookData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        appLabel = new javax.swing.JLabel();
        enterBKbtn = new javax.swing.JButton();
        updateBKbtn = new javax.swing.JButton();
        deleteBKbtn = new javax.swing.JButton();
        searchBKbtn = new javax.swing.JButton();
        newBookId = new javax.swing.JTextField();
        updateBookId = new javax.swing.JTextField();
        deleteBookId = new javax.swing.JTextField();
        searchBookId = new javax.swing.JTextField();
        exitBtn = new javax.swing.JButton();
        dataScrollPane = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        updateBookTitle = new javax.swing.JTextField();
        updateBookAuthor = new javax.swing.JTextField();
        updateBookQty = new javax.swing.JTextField();
        deleteBookTitle = new javax.swing.JTextField();
        deleteBookAuthor = new javax.swing.JTextField();
        deleteBookQty = new javax.swing.JTextField();
        searchBookTitle = new javax.swing.JTextField();
        searchBookAuthor = new javax.swing.JTextField();
        searchBookQty = new javax.swing.JTextField();
        newBookTitle = new javax.swing.JTextField();
        newBookAuthor = new javax.swing.JTextField();
        newBookQty = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        SQLresponse = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Bookstore App");
        setBounds(new java.awt.Rectangle(450, 200, 0, 0));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        appLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        appLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appLabel.setText("Bookstore");
        appLabel.setToolTipText("");
        appLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        appLabel.setName("appLabel"); // NOI18N

        enterBKbtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        enterBKbtn.setText("1. Enter book");
        enterBKbtn.setName("enterBKbtn"); // NOI18N
        enterBKbtn.setPreferredSize(new java.awt.Dimension(100, 30));
        enterBKbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterBKbtnActionPerformed(evt);
            }
        });

        updateBKbtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateBKbtn.setText("2. Update book");
        updateBKbtn.setName("updateBKbtn"); // NOI18N
        updateBKbtn.setPreferredSize(new java.awt.Dimension(100, 30));
        updateBKbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBKbtnActionPerformed(evt);
            }
        });

        deleteBKbtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteBKbtn.setText("3. Delete book");
        deleteBKbtn.setName("deleteBKbtn"); // NOI18N
        deleteBKbtn.setPreferredSize(new java.awt.Dimension(100, 30));
        deleteBKbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBKbtnActionPerformed(evt);
            }
        });

        searchBKbtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchBKbtn.setText("4. Search book");
        searchBKbtn.setName("searchBKbtn"); // NOI18N
        searchBKbtn.setPreferredSize(new java.awt.Dimension(100, 30));
        searchBKbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBKbtnActionPerformed(evt);
            }
        });

        newBookId.setToolTipText("  id here");
        newBookId.setMinimumSize(new java.awt.Dimension(10, 20));
        newBookId.setName("newBookId"); // NOI18N
        newBookId.setPreferredSize(new java.awt.Dimension(350, 30));

        updateBookId.setToolTipText("  id here");
        updateBookId.setMinimumSize(new java.awt.Dimension(10, 20));
        updateBookId.setName("updateBookId"); // NOI18N
        updateBookId.setPreferredSize(new java.awt.Dimension(350, 30));

        deleteBookId.setToolTipText("  id here");
        deleteBookId.setMinimumSize(new java.awt.Dimension(10, 20));
        deleteBookId.setName("deleteBookId"); // NOI18N
        deleteBookId.setPreferredSize(new java.awt.Dimension(350, 30));

        searchBookId.setToolTipText("  id here");
        searchBookId.setMinimumSize(new java.awt.Dimension(10, 20));
        searchBookId.setName("searchBookId"); // NOI18N
        searchBookId.setPreferredSize(new java.awt.Dimension(350, 30));

        exitBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exitBtn.setText("0. Exit");
        exitBtn.setName("exitBtn"); // NOI18N
        exitBtn.setPreferredSize(new java.awt.Dimension(71, 30));
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        dataScrollPane.setBorder(null);
        dataScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dataScrollPane.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        dataTable.setBackground(new java.awt.Color(153, 204, 255));
        dataTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Title", "Author", "Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setColumnSelectionAllowed(true);
        dataTable.setGridColor(new java.awt.Color(255, 255, 255));
        dataTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
        dataTable.setName("dataTable"); // NOI18N
        dataTable.setRowHeight(17);
        dataTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dataScrollPane.setViewportView(dataTable);
        dataTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        updateBookTitle.setToolTipText("    book title here");
        updateBookTitle.setMinimumSize(new java.awt.Dimension(10, 20));
        updateBookTitle.setName("updateBookTitle"); // NOI18N
        updateBookTitle.setPreferredSize(new java.awt.Dimension(350, 30));

        updateBookAuthor.setToolTipText("    book Author here");
        updateBookAuthor.setMinimumSize(new java.awt.Dimension(10, 20));
        updateBookAuthor.setName("updateBookAuthor"); // NOI18N
        updateBookAuthor.setPreferredSize(new java.awt.Dimension(350, 30));

        updateBookQty.setToolTipText("  qty here");
        updateBookQty.setMinimumSize(new java.awt.Dimension(10, 20));
        updateBookQty.setName("updateBookQty"); // NOI18N
        updateBookQty.setPreferredSize(new java.awt.Dimension(350, 30));

        deleteBookTitle.setToolTipText("    book title here");
        deleteBookTitle.setMinimumSize(new java.awt.Dimension(10, 20));
        deleteBookTitle.setName("deleteBookTitle"); // NOI18N
        deleteBookTitle.setPreferredSize(new java.awt.Dimension(350, 30));

        deleteBookAuthor.setToolTipText("    book Author here");
        deleteBookAuthor.setMinimumSize(new java.awt.Dimension(10, 20));
        deleteBookAuthor.setName("deleteBookAuthor"); // NOI18N
        deleteBookAuthor.setPreferredSize(new java.awt.Dimension(350, 30));

        deleteBookQty.setToolTipText("  qty here");
        deleteBookQty.setMinimumSize(new java.awt.Dimension(10, 20));
        deleteBookQty.setName("deleteBookQty"); // NOI18N
        deleteBookQty.setPreferredSize(new java.awt.Dimension(350, 30));

        searchBookTitle.setToolTipText("    book title here");
        searchBookTitle.setMinimumSize(new java.awt.Dimension(10, 20));
        searchBookTitle.setName("searchBookTitle"); // NOI18N
        searchBookTitle.setPreferredSize(new java.awt.Dimension(350, 30));

        searchBookAuthor.setToolTipText("    book Author here");
        searchBookAuthor.setMinimumSize(new java.awt.Dimension(10, 20));
        searchBookAuthor.setName("searchBookAuthor"); // NOI18N
        searchBookAuthor.setPreferredSize(new java.awt.Dimension(350, 30));

        searchBookQty.setToolTipText("  qty here");
        searchBookQty.setMinimumSize(new java.awt.Dimension(10, 20));
        searchBookQty.setName("searchBookQty"); // NOI18N
        searchBookQty.setPreferredSize(new java.awt.Dimension(350, 30));

        newBookTitle.setToolTipText("    book title here");
        newBookTitle.setMinimumSize(new java.awt.Dimension(10, 20));
        newBookTitle.setName("newBookTitle"); // NOI18N
        newBookTitle.setPreferredSize(new java.awt.Dimension(350, 30));

        newBookAuthor.setToolTipText("    book Author here");
        newBookAuthor.setMinimumSize(new java.awt.Dimension(10, 20));
        newBookAuthor.setName("newBookAuthor"); // NOI18N
        newBookAuthor.setPreferredSize(new java.awt.Dimension(350, 30));

        newBookQty.setToolTipText("  qty here");
        newBookQty.setMinimumSize(new java.awt.Dimension(10, 20));
        newBookQty.setName("newBookQty"); // NOI18N
        newBookQty.setPreferredSize(new java.awt.Dimension(350, 30));

        jScrollPane1.setEnabled(false);
        jScrollPane1.setFocusable(false);
        jScrollPane1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        SQLresponse.setEditable(false);
        SQLresponse.setBackground(new java.awt.Color(204, 204, 204));
        SQLresponse.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        SQLresponse.setName("SQLresponse"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, dataScrollPane, org.jdesktop.beansbinding.ELProperty.create("${name}"), SQLresponse, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(SQLresponse);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(enterBKbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(updateBKbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteBKbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(searchBKbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(searchBookId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                    .addComponent(deleteBookId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(updateBookId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(newBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(newBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(newBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(deleteBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(updateBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(searchBookTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(deleteBookAuthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                                    .addComponent(updateBookAuthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(updateBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(searchBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(newBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(appLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(appLabel)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterBKbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateBKbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBKbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBKbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchBookQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterBKbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterBKbtnActionPerformed
        int countEntered = 0;
        String etext = newBookId.getText()+", '"+newBookTitle.getText()+"', '"+newBookAuthor.getText()+"', "+newBookQty.getText();
        if(newBookId.getText().equals("")||newBookTitle.getText().equals("")||newBookAuthor.getText().equals("")||newBookQty.getText().equals(""))
            JOptionPane.showMessageDialog(null,"Please enter the book name.");
        
        else etext = "insert into books values ("+etext+");";
        JOptionPane.showMessageDialog(null, etext);
        try {
            loadBookData();
            Statement estnew = connState();
//            ResultSet enew = connRes(etext);
            countEntered = estnew.executeUpdate( etext );   // this does the actual insertion into the table
            dataScrollPane.setName(countEntered+" records added.");
            loadBookData();                                     // this to refresh the table
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(bookStore.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enterBKbtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        setVisible(false); //you can't see me!
        dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void updateBKbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBKbtnActionPerformed
        String utext = ""; //updateBookId.getText()+", '"+updateBookTitle.getText()+"', '"+updateBookAuthor.getText()+"', "+updateBookQty.getText();
        if(updateBookId.getText().equals("")||updateBookTitle.getText().equals("")||updateBookAuthor.getText().equals("")||updateBookQty.getText().equals(""))
            JOptionPane.showMessageDialog(null,"Please enter the book data to update.");
        
        else utext = "update books set title = '"+updateBookTitle.getText()+"' author = '"+updateBookAuthor.getText()+"' qty = "+updateBookQty.getText()+" where id = "+updateBookId.getText()+";";
                
        try {
            loadBookData();
            Statement ustnew = connState();
//            ResultSet enew = connRes(utext);
            int countUpdated = ustnew.executeUpdate( utext );
            dataScrollPane.setName(countUpdated+" records updated.");
            loadBookData();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(bookStore.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBKbtnActionPerformed

    private void deleteBKbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBKbtnActionPerformed
        String where_key="", where_value="";
        String dtext=""; // = deleteBookId.getText()+", '"+deleteBookTitle.getText()+"', '"+deleteBookAuthor.getText()+"', "+deleteBookQty.getText();
        if(!(deleteBookId.getText().equals("")||deleteBookTitle.getText().equals("")||deleteBookAuthor.getText().equals("")))
            JOptionPane.showMessageDialog(null, "Please enter the book name to delete.");
        else if (!deleteBookId.getText().equals("")) { where_key = "id"; where_value = deleteBookId.getText(); }
        else if (!deleteBookTitle.getText().equals("")) { where_key = "Title"; where_value = deleteBookTitle.getText(); }
        else if (!deleteBookAuthor.getText().equals("")) { where_key = "Author"; where_value = deleteBookAuthor.getText(); }
                
            dtext = "delete from books where "+where_key+" = "+where_value+";";
                
        try {
//            loadBookData();
            Statement dstnew = connState();
//          ResultSet enew = connRes(dtext);
            int countUpdated = dstnew.executeUpdate( dtext );
            dataScrollPane.setName(countUpdated+" records deleted.");
//            loadBookData();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(bookStore.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBKbtnActionPerformed

    private void searchBKbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBKbtnActionPerformed
        if(searchBookId.getText().equals(""))
            JOptionPane.showMessageDialog(null,"Please enter the book name to search for.");

    }//GEN-LAST:event_searchBKbtnActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
//        char c = evt.getKeyChar();
//        if (c=='1') 
//        {
//            int countEntered = 0;
//            String etext = newBookId.getText()+", '"+newBookTitle.getText()+"', '"+newBookAuthor.getText()+"', "+newBookQty.getText();
//            if(etext.equals(""))
//                JOptionPane.showMessageDialog(null,"Please enter the book name.");
//
//            else etext = "insert into books values ("+etext+");";
//            JOptionPane.showMessageDialog(null, etext);
//            try {
//                loadBookData();
//                Statement estnew = connState();
//    //            ResultSet enew = connRes(etext);
//                countEntered = estnew.executeUpdate( etext );   // this does the actual insertion into the table
//                dataScrollPane.setName(countEntered+" records added.");
//                loadBookData();                                     // this to refresh the table
//            } catch (SQLException | ClassNotFoundException ex) {
//                Logger.getLogger(bookStore.class.getName()).log(Level.SEVERE, null, ex);
//            } 
//        }
            
    }//GEN-LAST:event_formKeyTyped

    private ResultSet connRes(String qst) throws ClassNotFoundException, SQLException
    {
//        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library_db?useSSL=false","myuser","xxxxx");
        Statement st = con.prepareStatement(qst);
        ResultSet rs = st.executeQuery(qst);
        return rs;
    }
    
    private Statement connState() throws ClassNotFoundException, SQLException
    {
//        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library_db?useSSL=false","myuser","xxxxx");
        Statement st = con.createStatement();
        return st;
    }
    
    
    
    private void loadBookData() throws SQLException 
    {
        try {
            Statement stnew = connState();
            ResultSet rnew = connRes("select * from books");
            while(dataTable.getRowCount() > 0)
                {
                    ((DefaultTableModel)dataTable.getModel()).removeRow(0);
                }
            
            int col = rnew.getMetaData().getColumnCount();
            while(rnew.next())
                {
                    Object[] rows = new Object[col];
                    for(int i=1; i<=col;i++)
                    {
                        rows[i-1] = rnew.getObject(i);
                    }
                    ((DefaultTableModel)dataTable.getModel()).insertRow(rnew.getRow()-1, rows);
                }
            rnew.close();
            stnew.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(bookStore.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new bookStore().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(bookStore.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane SQLresponse;
    private javax.swing.JLabel appLabel;
    private javax.swing.JScrollPane dataScrollPane;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteBKbtn;
    private javax.swing.JTextField deleteBookAuthor;
    private javax.swing.JTextField deleteBookId;
    private javax.swing.JTextField deleteBookQty;
    private javax.swing.JTextField deleteBookTitle;
    private javax.swing.JButton enterBKbtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField newBookAuthor;
    private javax.swing.JTextField newBookId;
    private javax.swing.JTextField newBookQty;
    private javax.swing.JTextField newBookTitle;
    private javax.swing.JButton searchBKbtn;
    private javax.swing.JTextField searchBookAuthor;
    private javax.swing.JTextField searchBookId;
    private javax.swing.JTextField searchBookQty;
    private javax.swing.JTextField searchBookTitle;
    private javax.swing.JButton updateBKbtn;
    private javax.swing.JTextField updateBookAuthor;
    private javax.swing.JTextField updateBookId;
    private javax.swing.JTextField updateBookQty;
    private javax.swing.JTextField updateBookTitle;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

 
}
